@model TownViewModel

@{
    ViewBag.Title = "Add a new town";
}


<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form asp-action="Add" onsubmit="notify(event)" method="post" id="myForm">
            <div class="mb-3">
                <label asp-for="@Model.Name" class="form-label-add-edit">Name of the town</label>
                <input asp-for="@Model.Name" class="form-control" aria-required="true" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="@Model.ImgUrl" class="form-label-add-edit">Image Url</label>
                <input asp-for="@Model.ImgUrl" class="form-control" aria-required="true" />
                <span asp-validation-for="ImgUrl" class="text-danger"></span>
            </div>
            <div class="mb-3 text-center">
                <input class="btn btn-primary fw-bold text" type="submit" value="Add" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function notify(e) {
            e = e || window.event;
            e.preventDefault();
            const myForm = document.getElementById("myForm");
            const fieldOne = myForm.childNodes[1].childNodes[3].classList.contains("valid");
            const fieldTwo = myForm.childNodes[3].childNodes[3].classList.contains("valid");
            let isValid = false;

            if (fieldOne && fieldTwo) {
                isValid = true;
            }

            if (isValid) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Succesfully added town!',
                    showConfirmButton: false,
                    timer: 1500
                }).then((result) => {
                    myForm.submit();
                });
            }
        }
    </script>
}