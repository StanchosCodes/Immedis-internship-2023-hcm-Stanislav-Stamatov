@model TownDetailsViewModel
@using static HumanCapitalManagement.Common.GeneralConstants;

@{
    ViewBag.Title = "Town Details";
    string currentUserRole = this.Context.Session.GetString("Role")!;
}


<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row text-center">
    <div class="card w-50 text-center">
            <img class="card-img-top mt-2 text-center" style="width: 50%; height: 15vw; object-fit: cover;" src=@Model.ImgUrl alt="Town Image">
        <div class="card-body text-center">
            <h3 class="card-title text-center mb-5">@Model.Name</h3>
            <p class="mb-0"><span class="fw-bold mt-5">Employees living in this town: </span>@Model.Employees.Count()</p>

            @foreach (var e in Model.Employees)
            {
                <div class="card text-center" style="width: 20rem; ">
                    <div class="card-body text-center">
                        <h5 class="card-title mt-1 text-center">Name: @e.FirstName @e.MiddleName @e.LastName</h5>
                        <h5 class="card-title mt-1 text-center">Username: @e.Username</h5>
                    </div>
                </div>
            }

            @if (!Model.Employees.Any())
            {
                <p>No employees living in this town!</p>
            }
        </div>

        <a asp-controller="Town" asp-action="All" class="btn btn-outline-info mb-2 mt-5 w-100 p-3 fw-bold">Back to all towns</a>

        @if (currentUserRole == AdminRoleName)
        {
            <a asp-controller="Town" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-info mb-2 w-40 p-3 fw-bold text">Edit</a>

            <form class="input-group-sm" id="myForm" onsubmit="customConfirm(event)" asp-controller="Town" asp-action="Delete" asp-route-id="@Model.Id">
                <input type="submit" value="Delete the town" class="btn btn-danger mb-2 w-40 p-3 fw-bold text" />
            </form>
        }

    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function customConfirm(e) {
            e = e || window.event;
            e.preventDefault();
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: true,
                cancelButtonColor: '#d33'
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    const myForm = document.getElementById("myForm");
                    myForm.submit();
                } else if (
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'The town is safe :)',
                        'error')
                }
            })
        }
    </script>
}